import java.io.IOException;

import io.kubernetes.client.openapi.ApiClient;
import io.kubernetes.client.openapi.ApiException;
import io.kubernetes.client.openapi.Configuration;
import io.kubernetes.client.openapi.apis.AppsV1Api;
import io.kubernetes.client.openapi.models.V1DeploymentList;
import io.kubernetes.client.util.Config;

public class CVEReportGenerator {
	
	private void getContainerImageNames() throws IOException {
		ApiClient client = Config.defaultClient();
		Configuration.setDefaultApiClient(client);

		AppsV1Api appsV1Api = new AppsV1Api();
		V1DeploymentList deploymentList;
		try {
			deploymentList = appsV1Api.listDeploymentForAllNamespaces(null, null, null, null, null, null, null, null, null, null);
			deploymentList.getItems().stream()
			.forEach(deployment -> deployment.getSpec()
			.getTemplate().getSpec().getContainers()
			.forEach(container -> processImageName(container.getImage())));
		} catch (ApiException e) {
			e.printStackTrace();
		}    		   
	}
	
	private void processImageName(String imageName) {
		String version = "latest";
		String name = "";
		if (imageName.contains(":")) {
			version = imageName.substring(imageName.indexOf(":") + 1);
			name = imageName.substring(0, imageName.indexOf(":"));
		}
		callDTR(name, version);
	}
	
	private void callDTR(String imageName, String version) {
		System.out.println("Image Name: " + imageName + " | " + version);
		
	}
	

	public static void main(String[] args) throws IOException, ApiException{
		CVEReportGenerator cve = new CVEReportGenerator();
		cve.getContainerImageNames();

		
//		for (V1Deployment deploymnet : deploymentList.getItems()) {
//			for(V1Container container: deploymnet.getSpec().getTemplate().getSpec().getContainers()) {
//				String imageName = container.getImage();
//				System.out.println("Orig: " + imageName);
//				String version = "latest";
//				if (imageName.contains(":")) {
//					version = imageName.substring(imageName.indexOf(":") + 1);
//					imageName = imageName.substring(0, imageName.indexOf(":"));
//				}
//				System.out.println("Image Name: " + imageName + " .... version: " + version);
//			}
//		}
	}
}